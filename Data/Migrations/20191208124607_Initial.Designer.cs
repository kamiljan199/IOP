// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191208124607_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Model.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<string>("Number")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<string>("PostCode")
                        .HasColumnType("varchar(15) CHARACTER SET utf8mb4")
                        .HasMaxLength(15);

                    b.Property<string>("Street")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Model.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ReceiverAddressId")
                        .HasColumnType("int");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("SenderAddressId")
                        .HasColumnType("int");

                    b.Property<string>("SenderName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("StorePlaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverAddressId");

                    b.HasIndex("SenderAddressId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Model.Models.StorePlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("StorePlace");

                    b.HasDiscriminator<string>("Discriminator").HasValue("StorePlace");
                });

            modelBuilder.Entity("Model.Models.SendingPoint", b =>
                {
                    b.HasBaseType("Model.Models.StorePlace");

                    b.Property<int>("WorkersCount")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SendingPoint");
                });

            modelBuilder.Entity("Model.Models.Warehouse", b =>
                {
                    b.HasBaseType("Model.Models.StorePlace");

                    b.Property<string>("ManagerName")
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasDiscriminator().HasValue("Warehouse");
                });

            modelBuilder.Entity("Model.Models.Package", b =>
                {
                    b.HasOne("Model.Models.Address", "ReceiverAddress")
                        .WithMany()
                        .HasForeignKey("ReceiverAddressId");

                    b.HasOne("Model.Models.Address", "SenderAddress")
                        .WithMany()
                        .HasForeignKey("SenderAddressId");
                });

            modelBuilder.Entity("Model.Models.StorePlace", b =>
                {
                    b.HasOne("Model.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });
#pragma warning restore 612, 618
        }
    }
}
